Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

 

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 

Constraints:

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.

- - - 

# @param {String[]} strs
# @return {String}
def longest_common_prefix(strs)
    return_str = strs[0]
    # guard against single element array of strs
    return return_str if strs.length == 1

    # this can be done in a single line and remove first if condtion below.
    # refactor after solve
    prefix_hsh = {}

    return_str.split('').each_with_index do |letter, j|
        prefix_hsh[j] = letter
    end

    strs.each_with_index do | word, index |
        min_letters = [prefix_hsh.keys.count, word.length].min

        # remove excess pairs to match shorter of the two words
        prefix_hsh.keys.each do |k|
            # delete keys and values to length of shorter of two words.
            # offset length of longest word to index
            prefix_hsh.delete(k) if k > min_letters - 1
        end
        
        word.split('').each_with_index do |letter, n|
            if prefix_hsh[n] == letter
                next
            else
                prefix_hsh.keys.each do |k|
                    prefix_hsh.delete(k) if k >=n
                end
            end
        end
    end
    prefix_hsh.values.empty? ? "" : prefix_hsh.values.join("")
end
